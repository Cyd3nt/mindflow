from mindflow.utils.diff_parser import parse_git_diff_file


def test_diff_parser():
    diffs = parse_git_diff_file("mindflow/unit_tests/dummy_diff.txt")

    expected = {
        "b/diff.txt": 'diff --git a/diff.txt b/diff.txt\nindex de79139..e69de29 100644\n--- a/diff.txt\n+++ b/diff.txt\n@@ -1,38 +0,0 @@\n-diff --git a/mindflow/utils/diff_parser.py b/mindflow/utils/diff_parser.py\n-new file mode 100644\n-index 0000000..33a588f\n---- /dev/null\n-+++ b/mindflow/utils/diff_parser.py\n-@@ -0,0 +1,31 @@\n-+\n-+\n-+\n-+def parse_git_diff_file(diff_file):\n-+    diffs = {}\n-+    current_file = None\n-+    current_diff = []\n-+\n-+    with open(diff_file, "r") as f:\n-+        for line in f:\n-+            if line.startswith("diff --git"):\n-+                # Starting a new file\n-+                if current_file:\n-+                    # Add the previous diff to the dictionary\n-+                    diffs[current_file] = "".join(current_diff)\n-+                current_file = line.split()[-1]\n-+                current_diff = [line]\n-+            else:\n-+                current_diff.append(line)\n-+\n-+        # Add the last diff to the dictionary\n-+        if current_file:\n-+            diffs[current_file] = "".join(current_diff)\n-+\n-+    return diffs\n-+\n-+\n-+diffs = parse_git_diff_file("diff.txt")\n-+for filename, diff in diffs.items():\n-+    print(f"Diff for {filename}:")\n-+    print(diff)\n-\\ No newline at end of file\n',
        "b/mindflow/utils/diff_parser.py": 'diff --git a/mindflow/utils/diff_parser.py b/mindflow/utils/diff_parser.py\nindex 33a588f..bfb9b92 100644\n--- a/mindflow/utils/diff_parser.py\n+++ b/mindflow/utils/diff_parser.py\n@@ -1,4 +1,8 @@\n \n+import os\n+\n+# NOTE: make sure to have a the "." in the file extension (if applicable)\n+IGNORE_FILE_EXTENSIONS = [".pyc", ".ipynb", ".ipynb_checkpoints"]\n \n \n def parse_git_diff_file(diff_file):\n@@ -13,10 +17,21 @@ def parse_git_diff_file(diff_file):\n                 if current_file:\n                     # Add the previous diff to the dictionary\n                     diffs[current_file] = "".join(current_diff)\n+\n                 current_file = line.split()[-1]\n+                current_ext = os.path.splitext(current_file)[1]\n+\n+                if current_ext in IGNORE_FILE_EXTENSIONS:\n+                    # Ignore this file\n+                    current_file = None\n+                    current_diff = []\n+                    continue\n+\n                 current_diff = [line]\n             else:\n-                current_diff.append(line)\n+                # skip lines if we are ignoring this file (TODO - this is a bit hacky)\n+                if current_file:\n+                    current_diff.append(line)\n \n         # Add the last diff to the dictionary\n         if current_file:\n@@ -25,7 +40,9 @@ def parse_git_diff_file(diff_file):\n     return diffs\n \n \n+\n diffs = parse_git_diff_file("diff.txt")\n-for filename, diff in diffs.items():\n-    print(f"Diff for {filename}:")\n-    print(diff)\n\\ No newline at end of file\n+# for filename, diff in diffs.items():\n+#     print(f"Diff for {filename}:")\n+#     print(diff)\n+print(list(diffs.keys()))\n\\ No newline at end of file\n',
    }

    assert diffs == expected
